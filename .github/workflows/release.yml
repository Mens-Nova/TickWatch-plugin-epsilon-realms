name: Release

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Ensure main on manual
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          if [ "${{ github.ref_name }}" != "main" ]; then
            echo "Este workflow manual solo se puede ejecutar desde main."
            exit 1
          fi

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      - name: Determine version/tag (manual)
        id: ver_manual
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          VERSION="1.1.0"
          TAG="v${VERSION}"
          if git rev-parse -q --verify "refs/tags/${TAG}" >/dev/null; then
            echo "El tag ${TAG} ya existe."
            exit 1
          fi
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "tag=${TAG}" >> $GITHUB_OUTPUT

      - name: Determine version/tag (tag push)
        id: ver_tag
        if: ${{ github.event_name == 'push' }}
        run: |
          TAG="${GITHUB_REF_NAME}"
          VERSION="${TAG#v}"
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "tag=${TAG}" >> $GITHUB_OUTPUT

      - name: Bump POM (manual)
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          VERSION="${{ steps.ver_manual.outputs.version }}"
          mvn -B -ntp versions:set -DnewVersion="${VERSION}"
          mvn -B -ntp versions:commit
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add pom.xml
          git commit -m "chore(release): set version ${VERSION} [skip ci]" || true

      - name: Create and push tag (manual)
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          TAG="${{ steps.ver_manual.outputs.tag }}"
          git tag -a "${TAG}" -m "Release ${TAG}"
          git push origin "${TAG}"

      - name: Build (resilient, verbose)
        timeout-minutes: 20
        env:
          MAVEN_OPTS: "-Dorg.slf4j.simpleLogger.showDateTime=true -Djava.net.preferIPv4Stack=true"
        run: |
          echo "Probing Paper repo…"
          curl -sSf -I https://repo.papermc.io/repository/maven-public/ >/dev/null || echo "Paper repo probe failed (continuing)…"
          echo "Cleaning cached paper-api metadata…"
          rm -rf ~/.m2/repository/io/papermc/paper/paper-api || true
          echo "Maven version:"
          mvn -v
          for i in 1 2 3; do
            echo "=== Maven attempt $i ==="
            mvn -B -U -DskipTests \
              -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=info \
              -Dmaven.wagon.http.retryHandler.count=3 \
              -Dmaven.wagon.http.pool=false \
              -Dorg.apache.maven.wagon.http.timeout=60000 \
              -Dorg.apache.maven.wagon.http.connectionTimeout=60000 \
              clean package && break || {
                echo "Attempt $i failed, sleeping $((i*20))s…"
                sleep $((i*20))
              }
          done

      - name: Resolve coordinates
        id: coords
        run: |
          ARTIFACT_ID=$(mvn -q -Dexec.skip -DforceStdout help:evaluate -Dexpression=project.artifactId)
          VERSION_MAN="${{ steps.ver_manual.outputs.version }}"
          VERSION_TAG="${{ steps.ver_tag.outputs.version }}"
          if [ -n "${VERSION_MAN}" ]; then VER="${VERSION_MAN}"; else VER="${VERSION_TAG}"; fi
          echo "artifact_id=${ARTIFACT_ID}" >> $GITHUB_OUTPUT
          echo "version=${VER}" >> $GITHUB_OUTPUT

      - name: Locate JAR
        id: jar
        run: |
          ART="${{ steps.coords.outputs.artifact_id }}"
          VER="${{ steps.coords.outputs.version }}"
          FILE="target/${ART}-${VER}.jar"
          if [ ! -f "$FILE" ]; then
            FILE=$(ls target/${ART}-${VER}*.jar | head -n1 || true)
          fi
          if [ -z "$FILE" ] || [ ! -f "$FILE" ]; then
            echo "No se encontró JAR: target/${ART}-${VER}*.jar"
            ls -l target || true
            exit 1
          fi
          echo "file=${FILE}" >> $GITHUB_OUTPUT

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: TickWatch-${{ steps.coords.outputs.version }}
          path: ${{ steps.jar.outputs.file }}

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event_name == 'workflow_dispatch' && steps.ver_manual.outputs.tag || steps.ver_tag.outputs.tag }}
          name: TickWatch v${{ steps.coords.outputs.version }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: ${{ steps.jar.outputs.file }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
